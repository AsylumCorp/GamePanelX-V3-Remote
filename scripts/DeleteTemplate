#!/bin/bash
#
# GamePanelX
# Remote scripts v3.0.11
#
# Delete a Game/Voice Template
#

#
# Example usage:
# ./DeleteTemplate -i 24
#
archive_id=

while getopts "i:" OPTION
do
     case $OPTION in
         i)
             archive_id=$OPTARG
             ;;
         ?)
             exit
             ;;
     esac
done

if [ "$archive_id" == "" ]
then
    echo "DeleteTemplate: Required settings were left out.  Exiting."
    exit
fi

# Home Dir
tpl_tmp=$HOME/tmp/$archive_id

# Kill any related processes (game installer PID)
if [ -f $tpl_tmp/.gpxpid ]
then
    game_install_pid=`cat $tpl_tmp/.gpxpid`
    game_child=`ps -ef | grep $game_install_pid | grep -v grep | awk '{print $2}' | grep -v $game_install_pid`

    # Kill game child processes first
    if [ "`ps aux | grep $game_child | grep -v grep`" ]
    then
        for child_pid in `ps -ef | grep $game_child | grep -v grep | awk '{print $2}'`
        do
            kill $child_pid
        done
    fi

    # Kill game installer and it's child processes
    if [ "`ps aux | grep $game_install_pid | grep -v grep`" ]
    then
       for srv_pid in `ps -ef | grep $game_install_pid | grep -v grep | awk '{print $2}' | sort -r`
       do
           kill $srv_pid
       done
    fi
fi

# Watcher PID
if [ -f $tpl_tmp/.gpxinstall.pid ]
then
    watcher_pid=`cat $tpl_tmp/.gpxinstall.pid`

    # Kill watcher
    if [ "`ps aux | grep $watcher_pid | grep -v grep`" ]
    then
        kill $watcher_pid
    fi
fi


# Kill any Steam processes
if [ -f $tpl_tmp/.gpxsteam.pid ]
then
	# Kill 'steaminstall.sh' process
	if [ -f $tpl_tmp/.gpxtplcheck.pid ]
	then
		kill -9 $(cat $tpl_tmp/.gpxtplcheck.pid)
	fi

	# Kill './steam -command update ...' process
	kill -9 $(cat $tpl_tmp/.gpxsteam.pid)
fi

# Remote Template tarball
if [[ -f $HOME/templates/$archive_id.tar.gz || -d $HOME/tmp/$archive_id ]]
then
    rm -fr $HOME/templates/$archive_id.tar.gz $HOME/templates/.gpx_$archive_id $HOME/tmp/$archive_id/ >> /dev/null 2>&1 &
fi

echo "success"
